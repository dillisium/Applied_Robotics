import { MqttClient, IClientOptions } from "mqtt";
import { Go1State } from "./go1-state";
import { Go1, Go1Mode } from "../go1";
export declare class Go1MQTT {
    go1: Go1;
    client: MqttClient | null;
    floats: Float32Array;
    connected: boolean;
    movementTopic: string;
    ledTopic: string;
    modeTopic: string;
    publishFrequency: number;
    go1State: Go1State;
    iClientOptions: IClientOptions;
    readonly defaultIClientOptions: IClientOptions;
    constructor(go1: Go1, iClientOptions?: IClientOptions);
    connect: () => void;
    subscribe: () => void;
    getState: () => Go1State;
    disconnect: () => void;
    updateSpeed: (leftRight: number, turnLeftRight: number, lookUpDown: number, backwardForward: number) => void;
    sendMovementCommand: (lengthOfTime: number) => Promise<void>;
    sendLEDCommand: (r: number, g: number, b: number) => void;
    sendModeCommand: (mode: Go1Mode) => void;
    clamp: (speed: number) => number;
}
